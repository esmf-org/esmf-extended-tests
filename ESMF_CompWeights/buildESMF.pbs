#!/bin/bash
#
#PBS -N esmfbuild
#PBS -A P93300606
#PBS -l walltime=01:00:00
#PBS -q economy
#PBS -l select=1:ncpus=36:mpiprocs=36
#PBS -j oe
#PBS -m n

set -e

ESMFDIR=$1
BRANCH=$2
PLATFORM=$3
GNU10=$4

export ESMF_DIR=$ESMFDIR; export ESMF_BOPT=O; export ESMF_OPTLEVEL=2; export ESMF_ABI=64; unset ESMF_TESTEXHAUSTIVE;

BUILD_NP=4
if [[ $PLATFORM == "Cheyenne" ]]; then
    source /etc/profile.d/modules.sh
    module purge; module load ncarenv/1.3 intel/18.0.5 ncarcompilers/0.5.0 mpt/2.19 netcdf/4.7.1; 
    export ESMF_COMPILER=intel; export ESMF_COMM=mpt; export ESMF_NETCDF=split; export ESMF_NETCDF_INCLUDE=/glade/u/apps/ch/opt/netcdf/4.7.1/intel/18.0.5/include; export ESMF_NETCDF_LIBPATH=/glade/u/apps/ch/opt/netcdf/4.7.1/intel/18.0.5/lib; ESMF_OS=Linux;
    BUILD_NP=36
elif [[ $PLATFORM == "Linux" ]]; then
    export ESMF_COMPILER=gfortran; export ESMF_COMM=openmpi; export ESMF_NETCDF=split; export ESMF_NETCDF_INCLUDE=/usr/local/include; export ESMF_NETCDF_LIBPATH=/usr/local/lib; ESMF_OS=Linux;
    BUILD_NP=6
elif [[ $PLATFORM == "Darwin" ]]; then
    export ESMF_COMPILER=gfortran; export ESMF_COMM=openmpi; export ESMF_NETCDF=split; export ESMF_NETCDF_INCLUDE=/usr/local/include; export ESMF_NETCDF_LIBPATH=/usr/local/lib; ESMF_OS=Darwin;
else
    echo 'USAGE: PLATFORM must be set to Cheyenne, Linux or Darwin.'
    exit 1
fi

unset ESMF_CXXCOMPILEOPTS; unset ESMF_F90COMPILEOPTS;

if [[ $GNU10 == "True" ]]; then
    export ESMF_F90COMPILEOPTS+=" -fallow-argument-mismatch -fallow-invalid-boz"
    echo "GNU10 has been specified, ESMF_F90COMPILEOPTS = $ESMF_F90COMPILEOPTS"
fi

### Build and install ESMF
cd $ESMF_DIR
make -j$BUILD_NP distclean &> /dev/null
make -j$BUILD_NP &> $BRANCH-$ESMF_COMPILER-$ESMF_COMM-build.out
make install &> $BRANCH-$ESMF_COMPILER-$ESMF_COMM-install.out

# write the ESMFMKFILE to $ESMF_DIR/esmfmkfile.out for later use
# this is helpful to do here because all build flags are still available
rm -f $ESMF_DIR/esmfmkfile.out
echo "$ESMF_DIR/DEFAULTINSTALLDIR/lib/lib$ESMF_BOPT/$ESMF_OS.$ESMF_COMPILER.$ESMF_ABI.$ESMF_COMM.default/esmf.mk" > $ESMF_DIR/esmfmkfile.out