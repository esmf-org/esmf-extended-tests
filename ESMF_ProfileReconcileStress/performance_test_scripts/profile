#!/bin/bash
#
# submit Reconcile profiling jobs
#

np=$1
nrun=$2
testcase_in=$3
testcase=$(printf '%06d' "$testcase_in")

procs=(8 16 32 64 128 256 1024 4096 16384 65536)

SRCDIR="${HOME}/sandbox/esmf-external_demos/ESMF_ReconcileStress"
SCRIPTDIR="$SRCDIR/performance_test_scripts"
ROOTDIR="/glade/work/benkoz/ReconcilePerformanceResults"
# uncomment the following lines to test in non-Cheyenne environment
# SRCDIR="/home/ryan/sandbox/external-demos/ESMF_ReconcileStress"
# ROOTDIR="/home/ryan/ReconcilePerformanceResults"
# SCRIPTDIR="$SRCDIR/performance_test_scripts"

CFSRCDIR="$SRCDIR/Runs/Cheyenne-Run001/Config-$testcase"

# load the run environment
source /etc/profile.d/modules.sh
module purge
module load ncarenv/1.3 intel/18.0.5 ncarcompilers/0.5.0 mpt/2.19 netcdf/4.7.1

# set up the ESMF environment
export ESMFMKFILE=/glade/work/benkoz/sandbox/esmf/bekozi-staterecon-opts/install/lib/esmf.mk
export ESMF_RUNTIME_PROFILE=ON
export ESMF_RUNTIME_PROFILE_OUTPUT=SUMMARY

# build the executable locally
cd $SRCDIR
make distclean
make > make.out 2>&1

# create execution directory and copy executable to it
EXECDIR=$(python $SCRIPTDIR/run_generate_id.py $ROOTDIR 2>&1)
mkdir $EXECDIR
cd $EXECDIR

# create pbs file for each processor count in this run
for pnum in "${procs[@]}"
do
  # run all cases in procs that are not larger than input
  if [ $pnum -le $np ]
  then
    # calculate the number of nodes required for this batch submission
    nnum=$(( ($pnum+36-1)/36 ))

    # modify the batch submission script for this test case
    sed "s&%np%&$pnum&g; s&%nn%&$nnum&g; s&%nrun%&$nrun&g; s&%EXECDIR%&$EXECDIR&g" $SCRIPTDIR/reconcile_eval_run_pbs > $SCRIPTDIR/reconcile_eval_run_pbs_$pnum
    
    for ((ind=1; ind<$nrun+1; ++ind))
    do
      # create a separate directory to run each executable nrun times to give meaningful timings
      mkdir $pnum-$ind

      # copy config files and executable to execution directory
      ppnum=$(printf '%06d' "$pnum")
      cp $CFSRCDIR/stressP$ppnum-$testcase.config $pnum-$ind/stressP$ppnum.config
      cp $SRCDIR/ESMF_ReconcileStress $pnum-$ind
    done

    qsub $SCRIPTDIR/reconcile_eval_run_pbs_$pnum
    echo "qsub $SCRIPTDIR/reconcile_eval_run_pbs_$pnum"
    # bash $SCRIPTDIR/reconcile_eval_run_pbs_$pnum
  fi
done

# To collect the memory and timing data run the following scripts from $EXECDIR
# python $SCRIPTDIR/collect_timing_reports.py $num_runs
# python $SCRIPTDIR/collect_memory_reports.py $num_runs

